name: Security Pipeline Scan

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  security:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python (Semgrep & TruffleHog)
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep trufflehog

      - name: Install Gosec
        run: |
          wget -q https://github.com/securego/gosec/releases/download/v2.22.9/gosec_2.22.9_linux_amd64.tar.gz -O gosec.tar.gz
          tar -xzf gosec.tar.gz
          mv gosec $HOME/bin/gosec
          chmod +x $HOME/bin/gosec

      - name: Install Trivy
        run: |
          wget -q https://github.com/aquasecurity/trivy/releases/latest/download/trivy_$(uname -s)_$(uname -m).tar.gz -O trivy.tar.gz
          tar -xzf trivy.tar.gz
          mv trivy $HOME/bin/trivy
          chmod +x $HOME/bin/trivy

      - name: Install Gitleaks
        run: |
          wget -q https://github.com/gitleaks/gitleaks/releases/download/v8.28.0/gitleaks_8.28.0_linux_x64.tar.gz -O gitleaks.tar.gz
          tar -xzf gitleaks.tar.gz
          mv gitleaks $HOME/gitleaks
          chmod +x $HOME/gitleaks

      - name: Add $HOME/bin to PATH
        run: echo "$HOME/bin" >> $GITHUB_PATH

      - name: Run Security Scans
        run: |
          mkdir -p reports

          echo "-----------------------------"
          echo "Starting Security Scans"
          echo "-----------------------------"

          # ---- Gosec ----
          if [ -f go.mod ]; then
              echo "[Gosec] Scanning Go project..."
              $HOME/bin/gosec ./... -fmt=json -out=reports/gosec-report.json || true
          else
              echo "[Gosec] No go.mod found, creating empty report."
              echo "{}" > reports/gosec-report.json
          fi

          # ---- Semgrep ----
          echo "[Semgrep] Scanning project..."
          $HOME/.local/bin/semgrep --config=auto --error --json --verbose > reports/semgrep-report.json || true

          # ---- Trivy ----
          echo "[Trivy] Scanning filesystem..."
          $HOME/bin/trivy fs --scanners vuln,misconfig --exit-code 0 --format json -o reports/trivy-report.json . || true

          # ---- Gitleaks ----
          echo "[Gitleaks] Scanning project..."
          $HOME/gitleaks detect --source=. --report-format=json --report-path reports/gitleaks-report.json --exit-code 0 || true

          # ---- TruffleHog ----
          echo "[TruffleHog] Scanning project..."
          $HOME/.local/bin/trufflehog filesystem --repo_path . --json --regex --max_depth 10 > reports/trufflehog-report.json || true

          echo "-----------------------------"
          echo "All scans completed"
          echo "-----------------------------"

          # Ensure all reports exist
          for f in gosec-report.json semgrep-report.json trivy-report.json gitleaks-report.json trufflehog-report.json; do
              if [ ! -f reports/$f ]; then
                  echo "[Init] Creating empty report for $f"
                  echo "{}" > reports/$f
              fi
          done

          echo "Reports saved in ./reports"

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
