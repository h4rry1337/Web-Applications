name: Security Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  full-scan:
    name: Full Security Scan with Logs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare reports directory
        run: mkdir -p reports $HOME/bin

      - name: Install tools
        run: |
          # ---- Gosec ----
          GOSEC_VERSION=2.22.9
          curl -sSL -L https://github.com/securego/gosec/releases/download/v${GOSEC_VERSION}/gosec_${GOSEC_VERSION}_linux_amd64.tar.gz -o gosec.tar.gz
          tar -xzf gosec.tar.gz -C $HOME/bin
          chmod +x $HOME/bin/gosec

          # ---- Trivy ----
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b $HOME/bin

          # ---- Gitleaks ----
          GITLEAKS_VERSION=8.28.0
          curl -sSL -L -o gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz
          tar -xzf gitleaks.tar.gz -C $HOME
          chmod +x $HOME/gitleaks

          # ---- Python packages ----
          python3 -m pip install --user semgrep trufflehog

      - name: Verify binaries
        run: |
          echo "### Gosec Version"
          $HOME/bin/gosec version || true
          echo "### Trivy Version"
          $HOME/bin/trivy --version || true
          echo "### Gitleaks Version"
          $HOME/gitleaks version || true
          echo "### Semgrep Version"
          $HOME/.local/bin/semgrep --version || true
          echo "### TruffleHog Version"
          $HOME/.local/bin/trufflehog --version || true

      - name: Run all scans in parallel with logs
        run: |
          set -o pipefail

          # ---- Gosec ----
          if [ -f go.mod ]; then
            $HOME/bin/gosec ./... -fmt=json -out=reports/gosec-report.json 2>&1 | tee reports/gosec.log &
            GOSEC_PID=$!
          else
            echo "{}" > reports/gosec-report.json
            echo "No go.mod found, skipping Gosec" > reports/gosec.log
          fi

          # ---- Semgrep ----
          $HOME/.local/bin/semgrep --config=auto --error --json 2>&1 | tee reports/semgrep-report.json reports/semgrep.log &
          SEMGREP_PID=$!

          # ---- Trivy ----
          $HOME/bin/trivy fs --scanners vuln,misconfig --exit-code 0 --format json 2>&1 | tee reports/trivy-report.json reports/trivy.log &
          TRIVY_PID=$!

          # ---- Gitleaks ----
          $HOME/gitleaks detect --source=. --report-format=json --report-path reports/gitleaks-report.json 2>&1 | tee reports/gitleaks.log &
          GITLEAKS_PID=$!

          # ---- TruffleHog ----
          $HOME/.local/bin/trufflehog filesystem --repo_path . --json 2>&1 | tee reports/trufflehog-report.json reports/trufflehog.log &
          TRUFFLEHOG_PID=$!

          # ---- Wait for all ----
          [ ! -z "$GOSEC_PID" ] && wait $GOSEC_PID
          wait $SEMGREP_PID
          wait $TRIVY_PID
          wait $GITLEAKS_PID
          wait $TRUFFLEHOG_PID

          # ---- Ensure JSON reports exist ----
          for f in gosec-report.json semgrep-report.json trivy-report.json gitleaks-report.json trufflehog-report.json; do
            [ ! -f reports/$f ] && echo "{}" > reports/$f
          done

      - name: Upload all reports and logs
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
