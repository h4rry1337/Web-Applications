name: Security Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  full-scan:
    name: Full Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare reports directory
        run: mkdir -p reports $HOME/bin

      - name: Install tools
        run: |
          # ---- Gosec ----
          GOSEC_VERSION=2.23.0
          curl -sfL https://github.com/securego/gosec/releases/download/v${GOSEC_VERSION}/gosec_${GOSEC_VERSION}_linux_amd64.tar.gz -o gosec.tar.gz
          tar -xzf gosec.tar.gz -C $HOME/bin
          chmod +x $HOME/bin/gosec

          # ---- Trivy ----
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b $HOME/bin

          # ---- Gitleaks via tar.gz ----
          GITLEAKS_VERSION=8.28.0
          curl -sSL -o gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz
          tar -xzf gitleaks.tar.gz -C $HOME
          chmod +x $HOME/gitleaks

          # ---- Python packages ----
          pip install --user semgrep trufflehog

      - name: Verify binaries
        run: |
          $HOME/bin/gosec version
          $HOME/bin/trivy --version
          $HOME/gitleaks version
          $HOME/.local/bin/semgrep --version
          $HOME/.local/bin/trufflehog --version

      - name: Run all scans in parallel
        run: |
          # ---- Gosec ----
          if [ -f go.mod ]; then
            $HOME/bin/gosec ./... -fmt=json -out=reports/gosec-report.json || true &
            GOSEC_PID=$!
          else
            echo "{}" > reports/gosec-report.json
          fi

          # ---- Semgrep ----
          $HOME/.local/bin/semgrep --config=auto --error --json > reports/semgrep-report.json || true &
          SEMGREP_PID=$!

          # ---- Trivy ----
          $HOME/bin/trivy fs --scanners vuln,misconfig --exit-code 0 --format json -o reports/trivy-report.json . &
          TRIVY_PID=$!

          # ---- Gitleaks ----
          $HOME/gitleaks detect --source=. --report-format=json --report-path reports/gitleaks-report.json --exit-code 0 &
          GITLEAKS_PID=$!

          # ---- TruffleHog ----
          $HOME/.local/bin/trufflehog filesystem --repo_path . --json > reports/trufflehog-report.json || true &
          TRUFFLEHOG_PID=$!

          # ---- Wait for all ----
          [ ! -z "$GOSEC_PID" ] && wait $GOSEC_PID
          wait $SEMGREP_PID
          wait $TRIVY_PID
          wait $GITLEAKS_PID
          wait $TRUFFLEHOG_PID

          # ---- Ensure JSON reports exist ----
          for f in gosec-report.json semgrep-report.json trivy-report.json gitleaks-report.json trufflehog-report.json; do
            [ ! -f reports/$f ] && echo "{}" > reports/$f
          done

      - name: Upload all reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
