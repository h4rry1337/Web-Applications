```yaml
name: Security Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  sast:
    name: Static Code Analysis (Gosec + Semgrep)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run gosec (Go security linter)
        if: hashFiles('go.mod') != ''
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $HOME/bin latest
          $HOME/bin/gosec ./...

      - name: Run Semgrep
        run: |
          pip install semgrep
          semgrep --config=auto --error --json > semgrep-report.json || true

      - name: Upload semgrep report (artifact)
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-report
          path: semgrep-report.json

  secrets:
    name: Secrets Scanning (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          ./gitleaks detect --report-format json --report-path gitleaks-report.json || true

      - name: Upload gitleaks report
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  deps:
    name: Dependency Vulnerability Scan (Trivy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Trivy on source code
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          ./trivy fs --security-checks vuln,config --exit-code 0 --format json -o trivy-report.json .

      - name: Upload trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.json
```
