name: Security Pipeline Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  sast:
    name: Static Code Analysis (Gosec + Semgrep)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare reports directory
        run: mkdir -p reports $HOME/bin $HOME/.local/bin

      # ---- Gosec ----
      - name: Install Gosec
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $HOME/bin latest
          echo -e "\033[1;32mGosec version: $($HOME/bin/gosec version)\033[0m"

      - name: Run Gosec
        if: hashFiles('go.mod') != ''
        run: |
          echo -e "\033[1;34mRunning Gosec...\033[0m"
          $HOME/bin/gosec ./... -fmt=json -out=reports/gosec-report.json || true
          [ ! -f reports/gosec-report.json ] && echo "{}" > reports/gosec-report.json
          echo -e "\033[1;32mGosec scan finished\033[0m"

      # ---- Semgrep ----
      - name: Install Semgrep
        run: |
          pip install --user semgrep
          echo -e "\033[1;32mSemgrep version: $($HOME/.local/bin/semgrep --version)\033[0m"

      - name: Run Semgrep
        run: |
          echo -e "\033[1;34mRunning Semgrep...\033[0m"
          $HOME/.local/bin/semgrep --config=auto --error --json > reports/semgrep-report.json || true
          [ ! -f reports/semgrep-report.json ] && echo "{}" > reports/semgrep-report.json
          echo -e "\033[1;32mSemgrep scan finished\033[0m"

      - name: Upload SAST reports
        uses: actions/upload-artifact@v4
        with:
          name: sast-reports
          path: reports/

  secrets:
    name: Secrets Scanning (Gitleaks + TruffleHog)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare reports directory
        run: mkdir -p reports $HOME/bin $HOME/.local/bin

      # ---- Gitleaks ----
      - name: Run Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o $HOME/bin/gitleaks
          chmod +x $HOME/bin/gitleaks
          echo -e "\033[1;34mRunning Gitleaks...\033[0m"
          $HOME/bin/gitleaks detect --source=. --report-format=json --report-path reports/gitleaks-report.json --exit-code 0
          [ ! -f reports/gitleaks-report.json ] && echo "{}" > reports/gitleaks-report.json
          echo -e "\033[1;32mGitleaks scan finished\033[0m"

      # ---- TruffleHog ----
      - name: Install TruffleHog
        run: pip install --user trufflehog

      - name: Run TruffleHog
        run: |
          echo -e "\033[1;34mRunning TruffleHog...\033[0m"
          $HOME/.local/bin/trufflehog filesystem --repo_path . --json > reports/trufflehog-report.json || true
          [ ! -f reports/trufflehog-report.json ] && echo "{}" > reports/trufflehog-report.json
          echo -e "\033[1;32mTruffleHog scan finished\033[0m"

      - name: Upload Secrets reports
        uses: actions/upload-artifact@v4
        with:
          name: secrets-reports
          path: reports/

  deps:
    name: Dependency Vulnerability Scan (Trivy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare reports directory
        run: mkdir -p reports $HOME/bin

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b $HOME/bin
          echo -e "\033[1;32mTrivy version: $($HOME/bin/trivy --version)\033[0m"

      - name: Run Trivy
        run: |
          echo -e "\033[1;34mRunning Trivy...\033[0m"
          $HOME/bin/trivy fs --scanners vuln,misconfig --exit-code 0 --format json -o reports/trivy-report.json .
          [ ! -f reports/trivy-report.json ] && echo "{}" > reports/trivy-report.json
          echo -e "\033[1;32mTrivy scan finished\033[0m"

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: reports/
