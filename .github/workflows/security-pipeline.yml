name: Security Pipeline Scan

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  sast:
    name: Static Code Analysis (Gosec + Semgrep)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p reports $HOME/bin $HOME/.local/bin

      - name: Install Gosec
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $HOME/bin v2.21.4

      - name: Run Gosec
        if: hashFiles('go.mod') != ''
        run: |
          $HOME/bin/gosec ./... -fmt=json -out=reports/gosec-report.json || true
          [ ! -f reports/gosec-report.json ] && echo "{}" > reports/gosec-report.json

      - name: Install Semgrep
        run: pip install --user semgrep

      - name: Run Semgrep
        run: |
          $HOME/.local/bin/semgrep --config=auto --error --json > reports/semgrep-report.json || true
          [ ! -f reports/semgrep-report.json ] && echo "{}" > reports/semgrep-report.json

      - uses: actions/upload-artifact@v4
        with:
          name: sast-reports
          path: reports/

  secrets:
    name: Secrets Scanning (Gitleaks + TruffleHog)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: mkdir -p reports $HOME/bin $HOME/.local/bin

      - name: Install Gitleaks
        run: |
          GITLEAKS_VERSION="8.21.2"
          curl -sSL "https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz" -o gitleaks.tar.gz
          tar -xzf gitleaks.tar.gz -C $HOME/bin
          chmod +x $HOME/bin/gitleaks
          rm gitleaks.tar.gz

      - name: Run Gitleaks
        run: $HOME/bin/gitleaks detect --source=. --report-format=json --report-path=reports/gitleaks-report.json --exit-code=0 || true

      - name: Install TruffleHog
        run: pip install --user trufflehog

      - name: Run TruffleHog
        run: $HOME/.local/bin/trufflehog filesystem --directory=. --json > reports/trufflehog-report.json || true

      - uses: actions/upload-artifact@v4
        with:
          name: secrets-reports
          path: reports/

  trivy:
    name: Dependency & IaC Vulnerability Scan (Trivy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p reports $HOME/bin

      - name: Install Trivy
        run: curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b $HOME/bin

      - name: Run Trivy (Dependencies)
        run: |
          $HOME/bin/trivy fs --scanners vuln --exit-code 0 --format json -o reports/trivy-deps.json .
          [ ! -f reports/trivy-deps.json ] && echo "{}" > reports/trivy-deps.json

      - name: Run Trivy (IaC Misconfigs)
        run: |
          $HOME/bin/trivy fs --scanners misconfig --exit-code 0 --format json -o reports/trivy-iac.json .
          [ ! -f reports/trivy-iac.json ] && echo "{}" > reports/trivy-iac.json

      - uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: reports/
