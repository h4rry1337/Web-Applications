name: Security Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  full-scan:
    name: Full Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare reports directory
        run: mkdir -p reports

      - name: Cache binaries
        uses: actions/cache@v4
        with:
          path: |
            $HOME/bin/gosec
            $HOME/bin/trivy
            $HOME/gitleaks
          key: security-tools-cache-v3

      - name: Install tools if missing
        run: |
          mkdir -p $HOME/bin

          # Gosec (fixed version)
          if [ ! -f $HOME/bin/gosec ]; then
            curl -sfL https://raw.githubusercontent.com/securego/gosec/v2.23.0/install.sh | sh -s -- -b $HOME/bin v2.23.0
          fi

          # Trivy
          if [ ! -f $HOME/bin/trivy ]; then
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b $HOME/bin
          fi

          # Gitleaks (Linux x86_64, follow redirect)
          if [ ! -f $HOME/gitleaks ]; then
            curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o $HOME/gitleaks
            chmod +x $HOME/gitleaks
          fi

          # Python packages
          pip install --user semgrep trufflehog

      - name: Run all scanners in parallel
        run: |
          # Gosec
          if [ -f go.mod ]; then
            $HOME/bin/gosec ./... -fmt=json -out=reports/gosec-report.json || true &
            GOSEC_PID=$!
          else
            echo "{}" > reports/gosec-report.json
          fi

          # Semgrep
          $HOME/.local/bin/semgrep --config=auto --error --json > reports/semgrep-report.json || true &
          SEMGREP_PID=$!

          # Trivy
          $HOME/bin/trivy fs --scanners vuln,misconfig --exit-code 0 --format json -o reports/trivy-report.json . &
          TRIVY_PID=$!

          # Gitleaks
          $HOME/gitleaks detect --source=. --report-format=json --report-path reports/gitleaks-report.json --exit-code 0 &
          GITLEAKS_PID=$!

          # TruffleHog
          $HOME/.local/bin/trufflehog filesystem --repo_path . --json > reports/trufflehog-report.json || true &
          TRUFFLEHOG_PID=$!

          # Wait for all scanners
          [ ! -z "$GOSEC_PID" ] && wait $GOSEC_PID
          wait $SEMGREP_PID
          wait $TRIVY_PID
          wait $GITLEAKS_PID
          wait $TRUFFLEHOG_PID

          # Ensure JSON files exist
          for f in gosec-report.json semgrep-report.json trivy-report.json gitleaks-report.json trufflehog-report.json; do
            [ ! -f reports/$f ] && echo "{}" > reports/$f
          done

      - name: Upload all reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
